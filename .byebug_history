c
rec_messages
c
rec_messages
c
sent_messages
rec_messages
messages
c
sent_messages = User.find_by_email(params['email'])
sent_messages = User.find_by_email(params['email']).messages
sent_messages = User.find_by_email(params['email'])
sent_messages = begin;  User.find_by_email(params['email'])
sent_messages = begin;  User.find_by_email(params['email']).messages
sent_messages = begin;  User.find_by_email(params['email']).messages.order('created_at').limit(5); end; 
sent_messages = begin;  User.find_by_email(params['email']).messages.order('created_at').limit(5); end 
sent_messages = begin;  User.find_by_email(params['email']).messages.order('created_at').limit(5) || 'no'; end 
try {User.find_by_email(params['email']).messages.order('created_at').limit(5)}
try (User.find_by_email(params['email']).messages.order('created_at').limit(5))
try User.find_by_email(params['email']).messages.order('created_at').limit(5)
User.find_by_email(params['email']).messages.order('created_at').limit(5)
sent_messages = User.find_by_email(params['email']).messages.order('created_at').limit(5) || 'no'
sent_messages = User.find_by_email(params['email']).messages.order('created_at').limit(5) || []
sent_messages = User.find_by_email(params['email']).messages.order('created_at').limit(5)
c
sent_messages.map { |msg|  msg.target_email.user }
Message
sent_messages.map { |msg|  msg.target_email.user }
sent_messages.map { |msg|  msg.target_email.user_id }
Contact
sent_messages.map { |msg|  msg.target_email.user }
sent_messages.map { |msg|  msg.target_email }
rec_messages.map { |msg|  msg.user.username }
rec_messages.map { |msg|  msg.target_email }
rec_messages.map { |msg| { msg.target_email }}
rec_messages.map { |msg| { msg.user.email }}
messages
c
rec_messages.map {|m| m.user.email}c
rec_messages.map {|m| m.user.email}
rec_messages.map {|m| m.user}
rec_messages.map {|m| m.user.name}
rec_messages.map {|m| m.user}
rec_messages.map {|m| m.target_email}
rec_messages.map {|m| m.target_email.user}
rec_messages.map {|m| m.target_email}
rec_messages[0].target_email
rec_messages[0]
c
Message.where('target_email =?', params['email']).order('created_at').limit(5)
Message.where('target_email =?', params['email']).order('created_at')
Message.where('target_email =?', params['email'])
Message.where('email =?', params['email'])
Message.find_by_target_email(params['email'])
Message.find_by_target_email(params['email']).order('created_at').limit(5)
Message.find_by_target_email(params['email']).messages.order('created_at').limit(5)
c
Message.find_by_target_email(params['email'])
Message.all.target_email
Message.all
Message.find_by_target_email(params['email'])
Message.find_by_target_email(params['email']).messages.order('created_at').limit(5)
Message.find_by_target_email(params['email']).order('created_at').limit(5)
sent_messages.map { |msg| { user:  {name: msg['target_email'], timeSent: msg['created_at'], location: msg['address'] }} }
c
sent_messages.map { |msg| { user:  {name: msg['target_email'], timeSent: msg['created_at'], location: msg['address'] }} }
sent_messages.map { |msg| { user:  {name: msg['target_email'], timeSent: msg['created_at', location: msg['address']] }} }
messages
c
sent_messages.map { |msg| { user:  {name: msg['target_email'], timeSent }} }
sent_messages.map { |msg| { user: msg['target_email']} }
sent_messages.map { |msg| { user:  {name: msg['target_email'], timeSent }} }
sent_messages.map { |msg| { user: msg['target_email']} }
sent_messages.map { |msg| { user:  msg['target_email'] } }
sent_messages.map { |msg| { user: msg['target_email']} }
sent_messages.map { |msg| msg['target_email'] }
                      ]
                        }
                          # users: [ rec_messages.map { |msg| puts msg['target_email']} ]
                          id: 2,
                          cat: 'Recieved',
                        },{
                          users: sent_messages.map { |msg| msg['target_email'] }
                          id: 1,
                          cat: 'Sent',
                        {
  messages = [
messages
c
messages
sent_messages.map { |msg| msg['target_email'] }
sent_messages.map { |msg|  msg['target_email'] }
messages
c
sent_messages = User.find_by_email(params['email']).messages.order('created_at').limit(5)c
sent_messages = User.find_by_email(params['email']).messages.order('created_at').limit(5)
sent_messages = User.find_by_email(params['email'])
c
messages
c
sent_messages.each { |msg| puts msg['target_email'] }
sent_messages = User.find_by_email(params['email']).messages.order('created_at').limit(5)
sent_messages = User.find_by_email(params['email']).messages..order('created_at').limit(5)
sent_messages = User.find_by_email(params['email']).messages..order('created_at').limit(1)
sent_messages = User.find_by_email(params['email']).messages..order('created_at')limit(1)
sent_messages = User.find_by_email(params['email']).messages.limit(1)
sent_messages = User.find_by_email(params['email']).messages.limit(10)
5.times {|i| puts sent_messages[i]["target_email"]}
5.times {|i| sent_messages[i]["target_email"]}
sent_messages.count.limit(5)
sent_messages.count
sent_messages.each { |msg| puts msg['tatget_email'] }
sent_messages.each { |msg| puts msg.tatget_email }
sent_messages
sentMessages
messages = [{cat: 'Sent', id: 1, users: []},{cat: 'Recieved', id: 2,  users: []}]
c
q
c
messages
messages = [{cat: 'Sent', msgs: []},{cat: 'Recieved'}]
messages = []
c
messages
exit
messages
c
params
c
params
c
params
c
User.last
c
user_params
c
params
rec_messages
c
messages = User.find_by_email(params['email']).messages
u.messages
u = User.find_by_email(params['email'])
c
messages.relations
messages
messages.messages
messages.contactings
messages.contacting
messages.messages.all
messages.messages
messages = User.find_by_email(params['email'])
messages = User.find_by_email(params['email']).messages
c
u.contactings.all
u.email
 u = User.find_by_email(params[:email])
c
 u = User.find_by_email(params[:email])
c
@msg.picture == "null"
@msg.picture
@msg.picture == null
@msg.picture = null
!@msg.picture
If (!@msg.picture) puts "hi" end
If (@msg.picture) puts "hi" end
@msg.picture
@msg
c
step
--help
-h
c
@msg.user.username
@msg.user
@msg
c
@msg.user_id
@msg.user
@msg
c
Message.last
c
params
Message.last
message
c
Message.all
c
message
c
a.address params[:coords]
params
a.address 12 -12
a.methods
a
a = Geocoder
Geocoder.all
Geocoder
geocode
geo = Geocoder.new
Geocoder
geocode 29.951,-90.081
reverse_geocoded_by 49, -123
params
c
params
c
user
c
user
Contacting.last
c
params
params[:nickname]
Contacting.last
user
c
u
User.last
params
con
c
u
c
contacts  = u.contactings.first.contact.email
contacts  = u.contactings.first.contact
contacts  = u.contactings.last.contact
contacts  = u.contactings.last
contacts  = u.contactings.map{|c| c.nickname}
contacts  = u.contactings.map{|c| puts c.nickname}
contacts  = u.contactings.map{|c| [puts c.nickname]}
contacts  = u.contactings.map{|c| [putst c.nickname]}
contacts  = u.contactings.map{|c| [c.nickname, c.contact]}
c
contacts  = u.contactings.map{|c| [c.nickname, c.contact]}
contacts  = u.contactings.map{|c| [c.nickname, c.contact.email]}
u.contactings.first.contact.email
u.contactings.first.contact
u.contactings
contacts  = u.contactings.map{|c| [c.nickname, c.contact.email]}
contacts  = u.contactings.map{|c| [c.nickname, c.contact]}
contacts  = u.contactings.map{|c| [c.nickname]}
contacts  = u.contactings.map{|c| [c.nickname, c.contact.email]}
u.contactings.all contacts  = u.contactings.map{|c| [c.nickname, c.contact.email]}
u.contactings.all
u
params
c
User.last
c
u.errors.full_messages
u
User.last
c
